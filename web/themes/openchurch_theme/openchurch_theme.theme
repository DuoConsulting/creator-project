<?php

/**
 * @file
 * Functions to support theming in the OpenChurch Theme theme.
 */

use Drupal\Core\Template\Attribute;
use Drupal\image\Entity\ImageStyle;

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function openchurch_theme_preprocess_html(&$variables) {

}

/**
 * Implements hook_preprocess_HOOK() for page.html.twig.
 */
function openchurch_theme_preprocess_page(&$variables) {
  $config = \Drupal::config('system.site');
  $variables['site_name'] = $config->get('name');
  $variables['current_year'] = date('Y');

  // Get theme logo.
  $variables['logo'] = theme_get_setting('logo');
}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function openchurch_theme_preprocess_node(&$variables) {

}

/**
 * Implements hook_form_alter() to add classes to the search form.
 */
function openchurch_theme_form_alter(
  &$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
   if (in_array($form_id, ['search_block_form', 'search_form'])) {
     $key = ($form_id == 'search_block_form') ? 'actions' : 'basic';
     if (!isset($form[$key]['submit']['#attributes'])) {
       $form[$key]['submit']['#attributes'] = new Attribute();
     }
     $form[$key]['submit']['#attributes']->addClass(['btn-primary', 'btn-sm']);
   }
   if (in_array($form_id, ['search_block_form'])) {
    $form['keys']['#attributes']['placeholder'] = t('Search');
    $form['keys']['#title'] = '';
    $form['keys']['#attributes']['class'][] = 'form-control-sm';
   }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function openchurch_theme_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__' . $variables['elements']['content']['#block_content']->bundle());
  }
}

/**
 * Implements theme_preprocess_image().
 */
function openchurch_theme_preprocess_image(&$variables) {
  if (!empty($variables['attributes']['class']) && is_string($variables['attributes']['class'])) {
    $variables['attributes']['class'] = [$variables['attributes']['class']];
  }
  $variables['attributes']['class'][] = 'img-fluid';
}

/**
 * Implements theme_preprocess_field().
 */
function openchurch_theme_preprocess_field(&$variables) {
  $element = $variables['element'];
  if (isset($element['#field_name'])) {
    // Add Thumbnail image to gallery field_images.
    if ($element['#field_name'] == 'field_images' && $element['#bundle'] == 'gallery') {
      foreach ($variables['items'] as $key => $item) {
        if (isset($item['content']['#media']->field_media_image->entity)) {
          $uri = $item['content']['#media']->field_media_image->entity->getFileUri();
          $style = ImageStyle::load('gallery_thumb');
          if (isset($style)) {
            $variables['items'][$key]['thumbnail'] = $style->buildUrl($uri);
          }
        }
      }
    }
  }
}
